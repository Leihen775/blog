<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog.home.dao.UserInfoMapper">

  <!-- 添加用户信息 -->
  <insert id="addUserInfo" parameterType="blog.home.model.UserInfo">
    INSERT INTO user_info (accountnum,username,nickname,password,realname,job,sex,birth,trade_id,address,email,
    summary,image_path,birth_private,realname_private,address_private) 
    VALUE(#{accountNum},#{username},#{username},#{password},#{realname},#{job},#{sex},#{birth},#{tradeId},#{address},
    #{email},#{summary},#{imagePath},#{birth_private},#{realname_private},#{address_private})
  </insert>
  
  <!-- 关注数+1 -->
  <update id="addAttentionCount" parameterType="int">
    UPDATE user_info SET attentioncount=attentioncount+1 WHERE id=#{id}
  </update>
  
  <!-- 粉丝数+1 -->
  <update id="addFansCount" parameterType="int">
    UPDATE user_info SET fanscount=fanscount+1 WHERE id=#{id}
  </update>
  
  <!-- 文章数+1 -->
  <update id="addArticleCount" parameterType="int">
    UPDATE user_info SET articlecount=articlecount+1 WHERE id=#{id}
  </update>
  
  <!-- 评论数+1 -->
  <update id="addCommentCount" parameterType="int">
    UPDATE user_info SET commentcount=commentcount+1 WHERE id=#{id}
  </update>
  
  <!-- 喜欢数+1 -->
  <update id="addEnjoyCount" parameterType="int">
    UPDATE user_info SET enjoycount=enjoycount+1 WHERE id=#{id}
  </update>
  
  <!-- 修改用户信息 -->
  <update id="updateUserInfo" parameterType="blog.home.model.UserInfo">
    UPDATE user_info
    <set>
      <include refid="UPDATE_USER_SET"></include>
    </set>
    WHERE id=#{id}
  </update>
  
  <!-- 修改用户行业信息(当用户行业被单个删除时使用) -->
  <update id="updateUserTrade" parameterType="int">
    UPDATE user_info SET trade_id=null WHERE trade_id=#{tid}
  </update>
  
  <!-- 修改用户行业信息(当用户行业被批量删除时使用) -->
  <update id="updateUserTradeBatch" parameterType="java.util.List">
    UPDATE user_info SET trade_id=null WHERE
    <foreach collection="list" item="tid" separator="or">
      trade_id=#{tid}
    </foreach>
  </update>
  
  <!-- 关注数-1 -->
  <update id="minusAttentionCount" parameterType="int">
    UPDATE user_info SET attentioncount=attentioncount-1 WHERE id=#{id}
  </update>
  
  <!-- 粉丝数-1 -->
  <update id="minusFansCount" parameterType="int">
    UPDATE user_info SET fanscount=fanscount-1 WHERE id=#{id}
  </update>
  
  <!-- 文章数-1 -->
  <update id="minusArticleCount" parameterType="int">
    UPDATE user_info SET articlecount=articlecount-1 WHERE id=#{id}
  </update>
  
  <!-- 评论数-1 -->
  <update id="minusCommentCount" parameterType="int">
    UPDATE user_info SET commentcount=commentcount-1 WHERE id=#{id}
  </update>
  
  <!-- 喜欢数-1 -->
  <update id="minusEnjoyCount" parameterType="int">
    UPDATE user_info SET enjoycount=enjoycount-1 WHERE id=#{id}
  </update>
  
  <!-- 根据Id查询用户信息 -->
  <select id="findUser" parameterType="int" resultMap="userResult">
    SELECT a.*,b.id trade_id,b.name
    FROM (user_info a)
    LEFT JOIN user_trade b ON a.trade_id = b.id
    WHERE a.id=#{id}
  </select>
  
  <!-- 根据账号或用户名查找用户简单信息 -->
  <select id="findUserByInputInfo" parameterType="String" resultType="blog.home.model.UserInfo">
    SELECT a.id,a.accountnum,a.username,a.nickname,a.password
    FROM user_info a 
    WHERE accountnum=#{inputInfo} OR username=#{inputInfo}
  </select>
  
  <!-- 查找关注数 -->
  <select id="findAttentionCount" parameterType="int" resultType="int">
    SELECT attentioncount FROM user_info WHERE id={id}
  </select>
  
  <!-- 查找粉丝数 -->
  <select id="findFansCount" parameterType="int" resultType="int">
    SELECT fanscount FROM user_info WHERE id={id}
  </select>
  
  <!-- 查找文章数 -->
  <select id="findArticleCount" parameterType="int" resultType="int">
    SELECT articlecount FROM user_info WHERE id={id}
  </select>
  
  <!-- 查找评论数 -->
  <select id="findCommentCount" parameterType="int" resultType="int">
    SELECT commetcount FROM user_info WHERE id={id}
  </select>
  
  <!-- 查找喜欢数 -->
  <select id="findEnjoyCount" parameterType="int" resultType="int">
    SELECT enjoycount FROM user_info WHERE id={id}
  </select>
  <insert id="addUserRole" parameterType="blog.home.model.UserRole">
    insert into sys_user_role (user_id,role_id) value(#{userId},#{roleId})
  </insert>
  
  <delete id="deleteUserRole" parameterType="int">
    delete from sys_user_role where id = #{urid}
  </delete>
  
  <update id="updateUserRole" parameterType="blog.home.model.UserRole">
    update sys_user_role set user_id=#{userId},role_id=#{roleId} where id =#{id}
  </update>
  
  <select id="findRoles" parameterType="int" resultType="String">
    select r.role from user_info u, sys_role r,sys_user_role ur where u.username=#{info} and u.id=ur.user_id and r.id=ur.role_id
  </select>
  
  <select id="findPermissions" parameterType="int" resultType="String">
    select p.permission from user_info u, sys_role r, sys_permission p, sys_user_role ur, sys_role_permission rp where u.username=#{info} 
    and u.id=ur.user_id and r.id=ur.role_id and r.id=rp.role_id and p.id=rp.permission_id
  </select>
  
  <sql id="UPDATE_USER_SET">
    <if test="accountNum!=null and accountNum!=''">accountnum=#{accountNum},</if>
    <if test="username!=null and username!=''">username=#{username},</if>
    <if test="nickname!=null and nickname!=''">nickname=#{nickname},</if>
    <if test="password!=null and password!=''">password=#{password},</if>
    <if test="realname!=null and realname!=''">realname=#{realname},</if>
    <if test="job!=null and job!=''">job=#{job},</if>
    <if test="sex!=null and sex!=''">sex=#{sex},</if>
    <if test="birth!=null">birth=#{birth},</if>
    <if test="tradeId!=null and tradeId!=''">trade_id=#{tradeId},</if>
    <if test="address!=null and address!=''">address=#{address},</if>
    <if test="email!=null and email!=''">email=#{email},</if>
    <if test="summary!=null and summary!=''">summary=#{summary},</if>
    <if test="imagePath!=null and imagePath!=''">image_path=#{imagePath},</if>
    <if test="birth_private!=null and birth_private!=''">birth_private=#{birth_private},</if>
    <if test="realname_private!=null and realname_private!=''">realname_private=#{realname_private},</if>
    <if test="address_private!=null and address_private!=''">address_private=#{address_private},</if>
    <if test="attentionCount!=null and attentionCount!=''">attentioncount=#{attentionCount},</if>
    <if test="fansCount!=null and fansCount!=''">fanscount=#{fansCount},</if>
    <if test="articleCount!=null and articleCount!=''">articlecount=#{articleCount},</if>
    <if test="commentCount!=null and commentCount!=''">commentcount=#{commentCount},</if>
    <if test="enjoyCount!=null and enjoyCount!=''">enjoycount=#{enjoyCount},</if>
  </sql>
  
  <resultMap type="blog.home.model.UserInfo" id="userResult">
      <result column="id" property="id"/>
      <result column="accountnum" property="accountNum"/>
      <result column="username" property="username"/>
      <result column="nickname" property="nickname"/>
      <result column="password" property="password"/>
      <result column="realname" property="realname"/>
      <result column="job" property="job"/>
      <result column="sex" property="sex"/>
      <result column="birth" property="birth"/>
      <result column="address" property="address"/>
      <result column="email" property="email"/>
      <result column="summary" property="summary"/>
      <result column="image_path" property="imagePath"/>
      <result column="birth_private" property="birth_private"/>
      <result column="realname_private" property="realname_private"/>
      <result column="address_private" property="address_private"/>
      <result column="attentioncount" property="attentionCount"/>
      <result column="fanscount" property="fansCount"/>
      <result column="articlecount" property="articleCount"/>
      <result column="commentcount" property="commentCount"/>
      <result column="enjoycount" property="enjoyCount"/>
    <association property="trade" javaType="blog.home.model.Trade">
      <result column="trade_id" property="id"/>
      <result column="name" property="name"/>
    </association>
  </resultMap>
  
</mapper>