<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blog.home.dao.ArticleMapper">
  
  <!-- 添加博客文章 -->
  <insert id="addArticle" parameterType="blog.home.model.Article" 
          useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    INSERT INTO blog_article 
    (type,title,content,category_id,publish_time,clickcount,enjoycount,commentcount,state,
    is_private,user_id)
    VALUE(#{type},#{title},#{content},#{categoryId},#{publishTime},#{clickCount},#{enjoyCount},
    #{commentCount},#{state},#{is_private},#{userId})
  </insert>
  
  <!-- 点击数+1 -->
  <update id="addClickCount" parameterType="int">
    UPDATE blog_article SET clickcount=clickcount+1 WHERE id=#{id}
  </update>
  
  <!-- 喜欢数+1 -->
  <update id="addEnjoyCount" parameterType="int">
    UPDATE blog_article SET enjoycount=enjoycount+1 WHERE id=#{id}
  </update>
  
  <!-- 评论数+1 -->
  <update id="addCommentCount" parameterType="int">
    UPDATE blog_article SET commentcount=commentcount+1 WHERE id=#{id}
  </update>
  
  <!-- 根据 文章ID 单个删除文章信息 -->
  <delete id="deleteArticle" parameterType="int">
    DELETE FROM blog_article WHERE id=#{aid}
  </delete>
  
  <!-- 根据 文章ID 批量删除文章信息 -->
  <delete id="deleteArticleBatch" parameterType="java.util.List">
    DELETE FROM blog_article WHERE
    <foreach collection="list" item="id" separator="OR">
      id=#{id}
    </foreach>
  </delete>
  
  <!-- 喜欢数-1 -->
  <update id="minusEnjoyCount" parameterType="int">
    UPDATE blog_article SET enjoycount=enjoycount-1 WHERE id=#{id}
  </update>
  
  <!-- 评论数-1 -->
  <update id="minusCommentCount" parameterType="int">
    UPDATE blog_article SET commentcount=commentcount-1 WHERE id=#{id}
  </update>
  
  <!-- 根据 文章ID 修改文章信息 -->
  <update id="updateArticle" parameterType="blog.home.model.Article">
    UPDATE blog_article
    <set>
      <include refid="UPDATE_ARTICLE_SET"></include>
    </set> 
    WHERE id=#{id} 
  </update>
  
  <!-- 根据 文章ID 查询文章信息 -->
  <select id="findArticle" parameterType="int" resultMap="articleResult">
    SELECT b.*,d.id category_id,d.name,c.id tag_id,c.tag 
		FROM (blog_article_tag a)
		RIGHT JOIN blog_article b ON a.article_id=b.id
		LEFT JOIN blog_tag c ON a.tag_id=c.id
		LEFT JOIN blog_category d ON b.category_id=d.id
		WHERE b.id=#{id}
  </select>
  
  <!-- 查询所有文章简略信息(按时间排序) -->
  <select id="findAllArticle" resultMap="briefArticleResult">
    SELECT a.id,a.title,a.content,a.publish_time,a.clickcount,a.commentcount,b.id user_id,b.username,b.image_path
    FROM blog_article a,user_info b
    WHERE a.user_id=b.id AND a.state=1
    ORDER BY a.publish_time DESC
  </select>
  
  <!-- 根据类别ID查询文章简略信息(按时间排序) -->
  <select id="findArticleByCategory" parameterType="int" resultMap="briefArticleResult">
    SELECT a.id,a.title,a.publish_time,a.clickcount,a.commentcount,b.id user_id,b.username,b.image_path
    FROM blog_article a,user_info b
    WHERE a.category_id=#{id} and a.user_id=b.id
    ORDER BY a.publish_time DESC
  </select>
  
  <!-- 根据 文章标题进行模糊查询 文章简略信息(按时间排序) -->
  <select id="findArticleByTitle" parameterType="String" resultMap="briefArticleResult">
    SELECT a.id,a.title,a.publish_time,a.clickcount,a.commentcount,b.id user_id
    FROM blog_article a,user_info b
    WHERE a.user_id=b.id AND a.title LIKE "%" #{title} "%"
    ORDER BY a.publish_time DESC
  </select>
  
  <!-- 根据用户ID查询所有发布或草稿文章简略信息(按时间排序) -->
  <select id="findArticleByUser" parameterType="int" resultType="blog.home.model.Article">
    SELECT id,title,publish_time publishTime,clickcount,commentcount,state
    FROM blog_article 
    WHERE user_id=#{uid} AND state!=2
    ORDER BY publish_time DESC
  </select>
  
  <!-- 根据用户ID查询所有发布文章简略信息(按时间排序) -->
  <select id="findArticlePublish" parameterType="int" resultType="blog.home.model.Article">
    SELECT id,title,publish_time publishTime,clickcount,commentcount,state
    FROM blog_article 
    WHERE user_id=#{uid} AND state=1
    ORDER BY publish_time DESC
  </select>
  
  <!-- 根据用户ID查询所有草稿文章简略信息(按时间排序) -->
  <select id="findArticleDraft" parameterType="int" resultType="blog.home.model.Article">
    SELECT id,title,publish_time publishTime,clickcount,commentcount,state
    FROM blog_article 
    WHERE user_id=#{uid} AND state=0
    ORDER BY publish_time DESC
  </select>
  
  <!-- 根据用户ID查询所有已删除文章简略信息(按时间排序) -->
  <select id="findArticleGarbage" parameterType="int" resultType="blog.home.model.Article">
    SELECT id,title,publish_time publishTime,clickcount,commentcount,state
    FROM blog_article 
    WHERE user_id=#{uid} AND state=2
    ORDER BY publish_time DESC
  </select>
  
  <!-- 根据 “用户”标签ID查询该类文章数量 -->
  <select id="findArticleCountByTag" parameterType="int" resultType="int">
    SELECT COUNT(*) FROM blog_article_tag WHERE tag_id=#{tid}
  </select>
  
  <!-- 根据 “用户”标签ID文章简略信息 (按时间排序)-->
  <select id="findArticleByTag" parameterType="int" resultType="blog.home.model.Article">
    SELECT a.id,a.title,a.publish_time,a.clickcount,a.commentcount
    FROM blog_article a,blog_article_tag b
    WHERE b.tag_id=#{tid} and b.article_id = a.id
    ORDER BY a.publish_time DESC
  </select>
  
  <!-- 根据 "用户"标题模糊查询文章简略信息(按时间排序) -->
  <select id="findArticleByUserTitle" parameterType="blog.home.model.Article" resultType="blog.home.model.Article">
    SELECT id,title,publish_time,clickcount,commentcount
    FROM blog_article 
    WHERE user_id=#{userId} AND title LIKE "%" #{title} "%"
    ORDER BY publish_time DESC
  </select>
  
  <!-- 根据“用户”文章阅读量 查询最多的十篇 -->
  <select id="findArticleByClick" parameterType="int" resultType="blog.home.model.Article">
    SELECT id,title,clickcount
    FROM blog_article 
    WHERE user_id=#{uid}
    ORDER BY clickcount DESC
    LIMIT 0,10
  </select>
  
  <!-- 查询点击数 -->
  <select id="findClickCount" parameterType="int" resultType="int">
    SELECT clickcount FROM blog_article WHERE id=#{id}
  </select>
  
  <!-- 查询评论数 -->
  <select id="findCommentCount" parameterType="int" resultType="int">
    SELECT commentcount FROM blog_article WHERE id=#{id}
  </select>
  
  <!-- 查询喜欢数 -->
  <select id="findEnjoyCount" parameterType="int" resultType="int">
    SELECT enjoycount FROM blog_article WHERE id=#{id}
  </select>
  
  <sql id="UPDATE_ARTICLE_SET">
    <if test="type!=null and type!=''">type=#{type},</if>
    <if test="title!=null and title!=''">title=#{title},</if>
    <if test="content!=null and content!=''">content=#{content},</if>
    <if test="categoryId!=null">category_id=#{categoryId},</if>
    <if test="publishTime!=null">publish_time=#{publishTime},</if>
    <if test="clickCount!=null">clickcount=#{clickCount},</if>
    <if test="enjoyCount!=null">enjoycount=#{enjoyCount},</if>
    <if test="commentCount!=null">commentcount=#{commentCount},</if>
    <if test="state!=null">state=#{state},</if>
    <if test="is_private!=null">is_private=#{is_private},</if>
    <if test="userId!=null">user_id=#{userId},</if>
  </sql>
  
  <resultMap type="blog.home.model.Article" id="articleResult">
      <result column="id" property="id"/>
      <result column="type" property="type"/>
      <result column="title" property="title"/>
      <result column="content" property="content"/>
      <result column="publish_time" property="publishTime"/>
      <result column="clickcount" property="clickCount"/>
      <result column="enjoycount" property="enjoyCount"/>
      <result column="commentcount" property="commentCount"/>
      <result column="state" property="state"/>
      <result column="is_private" property="is_private"/>
      <result column="user_id" property="userId"/>
      <association property="category" javaType="blog.home.model.Category">
	      <result column="category_id" property="id"/>
	      <result column="name" property="name"/>
	    </association>
      <collection property="articleTagList" ofType="blog.home.model.ArticleTag">
	      <association property="tag" javaType="blog.home.model.Tag">
	        <result column="tag_id" property="id"/>
	        <result column="tag" property="tag"/>
	      </association>
	    </collection>
  </resultMap>
  
  <!-- 简略的文章结果映射 -->
  <resultMap type="blog.home.model.Article" id="briefArticleResult">
      <result column="id" property="id"/>
      <result column="title" property="title"/>
      <result column="content" property="content"/>
      <result column="publish_time" property="publishTime"/>
      <result column="clickcount" property="clickCount"/>
      <result column="commentcount" property="commentCount"/>
      <association property="userInfo" javaType="blog.home.model.UserInfo">
        <result column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="image_path" property="imagePath"/>
      </association>
  </resultMap>
  
</mapper>